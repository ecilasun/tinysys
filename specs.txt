CPU:
32 bit CPU running at 175MHz, approximately 5 clocks per instruction
Vectored or direct interrupt support
Based on RISC-V architecture
Implements the rv32im_zicsr_zifencei_zfinx feature set (32bit base instruction set, intereger div/mul, combined float+integer register file, 4096 control/status registers, I$/D$ fence and flush instructions, software/hardware/timer interrupts)
16Kbytes instruction cache
32Kbytes data cache
64Kbytes of ROM for the OS
No branch prediction
No pipelining
No memory management unit (i.e. no virtual memory)

Memory:
256MBytes of DDR3 SDRAM
Cached access from CPU and direct access from other devices on the bus, in 128bit bursts

Devices:
Memory mapped access to the following devices:
- Device temperature monitor, accessible from user software
- Video and 16 bit stereo audio over HDMI port (640x480 or 320x240 modes with 8bpp indexed or 16bpp truecolor for a total of 4 modes)
- SDCard slot
- USB-C port for serial connection to a host PC / power
- USB-A port for peripheral connectivity
- 4 user / debug LEDs (currently used by OS for status indication, user software can also access these)

OS:
Custom OS in ROM with preemptive multitasking, copied to RAM at boot
Can instead chain to user binary from SDCard (rom.bin at root)
Runs ELF files generated by riscv gcc13 directly (riscv64-unknown-elf-gcc with 32 bit output)
Implements memory allocation (s_brk) and file IO syscalls
Handles serial I/O via MAX3420E
Handles host features via MAX3421E and implements host device drivers (keyboard/mouse/joystick)
Implements a simple CLI that can execute basic maintenance tasks / load ELF files from storage
Currently runs 2 OS threads + 1 user ELF

NOTES:
The custom board that houses this system contains two USB control chips, one audio DAC and the SDCard reader, one soft-reset button, as well as connectors for peripherals and power. There is also a 5v to 3v3 conversion circuit so that the power can be drawn from the USB-C port.
The board is designed to carry a QMTECH A7-200T FPGA core board (i.e. it has nothing more than a blank FPGA, one DDR3 SDRAM chip, and power circuitry). The entire system is implemented in SystemVerilog to run inside this chip.
Future revisions of the board will include this chip directly onboard so that'll cut the requirement for an daughterboard, but for this version that's one thing that limits number of devices that can be made
